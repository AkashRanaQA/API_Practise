{
	"info": {
		"_postman_id": "0edbbb52-e8aa-4337-9ed9-9a9a0777c947",
		"name": "AUTH Module bin.org",
		"description": "This collection consist of Restful APIs that are public and secured. the auth types used are\n\nBasic auth\n\nDigest auth\n\nBearer Token auth\n\nupan entering valid data, we get 200 OK from server else get 401 UNAUTHORIZED from server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32355326"
	},
	"item": [
		{
			"name": "POSITIVE TCs",
			"item": [
				{
					"name": "Basic AUTH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify is 200 is received\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Ok msg in response\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"verify if response body contains some strings\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"authenticated\");\r",
									"    pm.expect(pm.response.text()).to.include(\"user\");\r",
									"});\r",
									"\r",
									"pm.test(\"verify if content type response header is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\" , \"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "password",
									"value": "passwd",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/basic-auth/user/passwd",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"basic-auth",
								"user",
								"passwd"
							]
						},
						"description": "This is RESTFUL API that uses Bsic auth"
					},
					"response": [
						{
							"name": "Basic AUTH",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/basic-auth/user/passwd",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"basic-auth",
										"user",
										"passwd"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 06:10:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "gunicorn/19.9.0"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								}
							],
							"cookie": [],
							"body": "{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}"
						}
					]
				},
				{
					"name": "Bearer AUTH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify is 200 is received\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Ok msg in response\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"verify if response body contains some strings\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"authenticated\");\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"pm.test(\"verify if content type response header is application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\" , \"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "Bearer 12345",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/bearer",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"bearer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Digest AUTH",
					"request": {
						"auth": {
							"type": "digest",
							"digest": [
								{
									"key": "password",
									"value": "passwd",
									"type": "string"
								},
								{
									"key": "qop",
									"value": "auth",
									"type": "string"
								},
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "MD5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/digest-auth/auth/user/passwd",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"digest-auth",
								"auth",
								"user",
								"passwd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Digest_Algorithm_AUTH",
					"request": {
						"auth": {
							"type": "digest",
							"digest": [
								{
									"key": "username",
									"value": "user",
									"type": "string"
								},
								{
									"key": "qop",
									"value": "qop",
									"type": "string"
								},
								{
									"key": "password",
									"value": "passwd",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "MD5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/digest-auth/qop/user/passwd/MD5",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"digest-auth",
								"qop",
								"user",
								"passwd",
								"MD5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NEGATIVE TCs",
			"item": [
				{
					"name": "BASIC",
					"item": [
						{
							"name": "Basic-AUTH-Method Tampering",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify is 405 is received\", function () {\r",
											"    pm.response.to.have.status(405);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if METHOD NOT ALLOWED msg in response\", function () {\r",
											"    pm.response.to.have.status(\"METHOD NOT ALLOWED\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"text/html\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "passwd",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/basic-auth/user/passwd",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"basic-auth",
										"user",
										"passwd"
									]
								}
							},
							"response": [
								{
									"name": "Basic AUTH",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://httpbin.org/basic-auth/user/passwd",
											"protocol": "https",
											"host": [
												"httpbin",
												"org"
											],
											"path": [
												"basic-auth",
												"user",
												"passwd"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 16 Jan 2024 06:10:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "47"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										}
									],
									"cookie": [],
									"body": "{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}"
								}
							]
						},
						{
							"name": "Basic NOAUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify is 401 is received\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED msg in response\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/basic-auth/user/passwd",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"basic-auth",
										"user",
										"passwd"
									]
								}
							},
							"response": [
								{
									"name": "Basic AUTH",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://httpbin.org/basic-auth/user/passwd",
											"protocol": "https",
											"host": [
												"httpbin",
												"org"
											],
											"path": [
												"basic-auth",
												"user",
												"passwd"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 16 Jan 2024 06:10:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "47"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										}
									],
									"cookie": [],
									"body": "{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}"
								}
							]
						},
						{
							"name": "Basic INVALID CREDETIALS AUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify is 401 is received\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED msg in response\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "akash",
											"type": "string"
										},
										{
											"key": "password",
											"value": "passwd",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/basic-auth/user/passwd",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"basic-auth",
										"user",
										"passwd"
									]
								}
							},
							"response": [
								{
									"name": "Basic AUTH",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://httpbin.org/basic-auth/user/passwd",
											"protocol": "https",
											"host": [
												"httpbin",
												"org"
											],
											"path": [
												"basic-auth",
												"user",
												"passwd"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 16 Jan 2024 06:10:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "47"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "gunicorn/19.9.0"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										}
									],
									"cookie": [],
									"body": "{\n    \"authenticated\": true,\n    \"user\": \"user\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "BEARER",
					"item": [
						{
							"name": "Bearer INVALID-AUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify is 401 is received\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED msg in response\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"verify if content type response header is text/html; charset=utf-8\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\" , \"text/html; charset=utf-8\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "user",
											"type": "string"
										},
										{
											"key": "password",
											"value": "passwd",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/bearer",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"bearer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bearer INVALID-CREDENTIALS(bug got)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify is 401 is received\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED msg in response\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"verify if content type response header is text/html; charset=utf-8\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\" , \"text/html; charset=utf-8\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "akash 08",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/bearer",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"bearer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bearer NOAUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify is 401 is received\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if UNAUTHORIZED msg in response\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/bearer",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"bearer"
									]
								},
								"description": "This is RESTFUL API that uses no Auth"
							},
							"response": []
						}
					]
				},
				{
					"name": "DIGEST",
					"item": [
						{
							"name": "Digest NO- AUTH",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"verify if response msg is UNAUTHORIZED \", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/digest-auth/qop/user/passwd",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"digest-auth",
										"qop",
										"user",
										"passwd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Digest EMPTY- CREDETIALS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"verify if response msg is UNAUTHORIZED \", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "digest",
									"digest": [
										{
											"key": "password",
											"value": "",
											"type": "string"
										},
										{
											"key": "username",
											"value": "",
											"type": "string"
										},
										{
											"key": "qop",
											"value": "auth",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "MD5",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/digest-auth/qop/user/passwd",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"digest-auth",
										"qop",
										"user",
										"passwd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Digest_Algo_AUTH-INVALIDCREDENT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"verify is unauthorized is visible\", function () {\r",
											"    pm.response.to.have.status(\"UNAUTHORIZED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "digest",
									"digest": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "akash",
											"type": "string"
										},
										{
											"key": "qop",
											"value": "qop",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "MD5",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/digest-auth/qop/user/passwd/MD5",
									"protocol": "https",
									"host": [
										"httpbin",
										"org"
									],
									"path": [
										"digest-auth",
										"qop",
										"user",
										"passwd",
										"MD5"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}